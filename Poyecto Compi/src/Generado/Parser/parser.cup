package Generado.Parser;
import java_cup.runtime.*;
import java.util.ArrayList;
parser code
{:
  public boolean syntaxErrors;

  ArrayList<String> errores;

  public Analizador(java_cup.runtime.Scanner s, boolean type) {
    super(s);
    errores = new ArrayList<String>();
  }
  
  public void addError(String error){
    errores.add(error);
  }
  public ArrayList<String> retornarLista(){
    return errores;
  }
  public void syntax_error(Symbol s){
  }
:}
action code
{:
:}

/*----------------------------------------------------------------------*/
/* Declaracion de terminales */
terminal identificador,palabraReservada, INT,FLOAT,CHAR,STRING,opAritmeticos,opComparadores,opAsignaciones,opDelimitadores,opBits,opLogicos,ERROR,END;

terminal var,clas,def;

/*Delimitadores*/
terminal dosPuntos,puntoComa,parenAbierto,parenCerrado,coma;

/*--------------------------------------------------------------------------*/

/* Declaracion de no terminales */
non terminal Programa, Variable;
non terminal Funcional,Funcion,Funciones,FuncionesFact,ParametrosFact,Parametros;
non terminal Variables;
non terminal OOP;

precedence left opDelimitadores;

/* inicio de gramatica */
start with Programa;

Programa::= Funcional {: ProyectoCompi.PoyectoCompi.consola.impirmir("Parseo realizado exitosamente. De tipo Funcional."); :}
| OOP               {: ProyectoCompi.PoyectoCompi.consola.impirmir("Parseo realizado exitosamente. De tipo OOP."); :}
| ;


Funcional ::= FuncionesFact;

FuncionesFact ::= Funcion Funciones;
Funciones ::= Funcion Funciones | ;
Funcion ::= def identificador parenAbierto ParametrosFact parenCerrado dosPuntos;

ParametrosFact ::= Variable Parametros | ; /* si variable se inicializa en isma linea se debe cambiar */
Parametros::= coma Variable  Parametros | ; 
/*-----------------------------------------------------------------------------------------*/
Variable::= var identificador | error:e        {: parser.addError("Falta Identificador en la linea:" + ((java_cup.runtime.Symbol)CUP$Analizador$stack.peek()).left); :};
Variables ::= Variable Variables | ;

OOP::= clas identificador dosPuntos Variables;